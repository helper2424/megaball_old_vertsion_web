# RailsAdmin config file. Generated on December 05, 2013 04:32
# See github.com/sferik/rails_admin for more informations

RailsAdmin.config do |config|


  ################  Global configuration  ################

  # Set the admin name here (optional second array element will appear in red). For example:
  config.main_app_name = ['Megaball Web', 'Admin']
  # or for a more dynamic name:
  # config.main_app_name = Proc.new { |controller| [Rails.application.engine_name.titleize, controller.params['action'].titleize] }

  # RailsAdmin may need a way to know who the current user is]
  config.current_user_method { current_rails_admin_user } # auto-generated

  # If you want to track changes on your models:
  # config.audit_with :history, 'RailsAdminUser'

  # Or with a PaperTrail: (you need to install it first)
  # config.audit_with :paper_trail, 'RailsAdminUser'

  # Display empty fields in show views:
  # config.compact_show_view = false

  # Number of default rows per-page:
  # config.default_items_per_page = 20

  # Exclude specific models (keep the others):
  # config.excluded_models = ['Achievement', 'AcidClub', 'AcidClubOrder', 'AcidClubTransferTransaction', 'AcidCurrency', 'AcidGate', 'AcidOrder', 'AcidPaymentTransaction', 'AcidUser', 'Animation', 'Arc', 'Ball', 'ChatServer', 'Circle', 'Club', 'ClubUser', 'ClubUserRequest', 'Collection', 'Currency', 'EventServer', 'GameEvent', 'GamePlay', 'GameResult', 'GameServer', 'Gate', 'InGamePosition', 'Invite', 'Item', 'ItemContent', 'Line', 'Map', 'MapBall', 'Message', 'News', 'OauthProvider', 'RailsAdminUser', 'Room', 'Shape', 'Sprite', 'StartPosition', 'TeamGameResult', 'User', 'UserAchievement', 'UserCollection', 'UserControl', 'UserDefault', 'UserGameResult', 'UserLog', 'UserWeapon', 'Visit', 'Weapon']

  # Include specific models (exclude the others):
  # config.included_models = ['Achievement', 'AcidClub', 'AcidClubOrder', 'AcidClubTransferTransaction', 'AcidCurrency', 'AcidGate', 'AcidOrder', 'AcidPaymentTransaction', 'AcidUser', 'Animation', 'Arc', 'Ball', 'ChatServer', 'Circle', 'Club', 'ClubUser', 'ClubUserRequest', 'Collection', 'Currency', 'EventServer', 'GameEvent', 'GamePlay', 'GameResult', 'GameServer', 'Gate', 'InGamePosition', 'Invite', 'Item', 'ItemContent', 'Line', 'Map', 'MapBall', 'Message', 'News', 'OauthProvider', 'RailsAdminUser', 'Room', 'Shape', 'Sprite', 'StartPosition', 'TeamGameResult', 'User', 'UserAchievement', 'UserCollection', 'UserControl', 'UserDefault', 'UserGameResult', 'UserLog', 'UserWeapon', 'Visit', 'Weapon']

  # Label methods for model instances:
  # config.label_methods << :description # Default is [:name, :title]


  ################  Model configuration  ################

  # Each model configuration can alternatively:
  #   - stay here in a `config.model 'ModelName' do ... end` block
  #   - go in the model definition file in a `rails_admin do ... end` block

  # This is your choice to make:
  #   - This initializer is loaded once at startup (modifications will show up when restarting the application) but all RailsAdmin configuration would stay in one place.
  #   - Models are reloaded at each request in development mode (when modified), which may smooth your RailsAdmin development workflow.


  # Now you probably need to tour the wiki a bit: https://github.com/sferik/rails_admin/wiki
  # Anyway, here is how RailsAdmin saw your application's models when you ran the initializer:



  ###  Achievement  ###

  # config.model 'Achievement' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your achievement.rb model definition

  #   # Found associations:

  #     configure :achievement_entry, :has_many_association         # Hidden 

  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :title, :string 
  #     configure :picture, :text 
  #     configure :description, :text 
  #     configure :unique_id, :integer 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  AcidClub  ###

  # config.model 'AcidClub' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your acid_club.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :id, :integer 
  #     configure :real_balance, :integer 
  #     configure :imagine_balance, :integer 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  AcidClubOrder  ###

  # config.model 'AcidClubOrder' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your acid_club_order.rb model definition

  #   # Found associations:

  #     configure :acid_club, :belongs_to_association 

  #   # Found columns:

  #     configure :id, :integer 
  #     configure :date, :datetime 
  #     configure :club_id, :integer         # Hidden 
  #     configure :balance_type, :integer 
  #     configure :amount, :decimal 
  #     configure :product_id, :integer 
  #     configure :product_type, :integer 
  #     configure :qti, :integer 
  #     configure :balance, :decimal 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  AcidClubTransferTransaction  ###

  # config.model 'AcidClubTransferTransaction' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your acid_club_transfer_transaction.rb model definition

  #   # Found associations:

  #     configure :acid_user, :belongs_to_association 
  #     configure :acid_club, :belongs_to_association 

  #   # Found columns:

  #     configure :id, :integer 
  #     configure :date, :datetime 
  #     configure :transfer_type, :integer 
  #     configure :user_id, :integer         # Hidden 
  #     configure :club_id, :integer         # Hidden 
  #     configure :amount, :decimal 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  AcidCurrency  ###

  # config.model 'AcidCurrency' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your acid_currency.rb model definition

  #   # Found associations:

  #     configure :acid_gate, :belongs_to_association 

  #   # Found columns:

  #     configure :id, :integer 
  #     configure :gate_id, :integer         # Hidden 
  #     configure :currency, :integer 
  #     configure :name, :string 
  #     configure :exchange_rate, :decimal 
  #     configure :date, :datetime 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  AcidGate  ###

  # config.model 'AcidGate' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your acid_gate.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :id, :integer 
  #     configure :name, :string 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  AcidOrder  ###

  # config.model 'AcidOrder' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your acid_order.rb model definition

  #   # Found associations:

  #     configure :acid_user, :belongs_to_association 

  #   # Found columns:

  #     configure :id, :integer 
  #     configure :date, :datetime 
  #     configure :user_id, :integer         # Hidden 
  #     configure :balance_type, :integer 
  #     configure :amount, :decimal 
  #     configure :product_id, :integer 
  #     configure :qti, :integer 
  #     configure :balance, :decimal 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  AcidPaymentTransaction  ###

  # config.model 'AcidPaymentTransaction' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your acid_payment_transaction.rb model definition

  #   # Found associations:

  #     configure :acid_user, :belongs_to_association 
  #     configure :acid_currency, :belongs_to_association 

  #   # Found columns:

  #     configure :id, :integer 
  #     configure :user_id, :integer         # Hidden 
  #     configure :currency_id, :integer         # Hidden 
  #     configure :date, :datetime 
  #     configure :gate_currency_amount, :decimal 
  #     configure :our_currency_amount, :decimal 
  #     configure :bonus, :decimal 
  #     configure :additional, :string 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  AcidUser  ###

  # config.model 'AcidUser' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your acid_user.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :id, :integer 
  #     configure :real_balance, :integer 
  #     configure :imagine_balance, :integer 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Animation  ###

  # config.model 'Animation' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your animation.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :name, :string 
  #     configure :images, :serialized 
  #     configure :type, :text 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Arc  ###

  # config.model 'Arc' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your arc.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :visible, :boolean 
  #     configure :state, :serialized 
  #     configure :texture_url, :text 
  #     configure :player_collision, :boolean 
  #     configure :shape_collision, :boolean 
  #     configure :_type, :text         # Hidden 
  #     configure :x, :integer 
  #     configure :y, :integer 
  #     configure :start_a, :float 
  #     configure :end_a, :float 
  #     configure :radius, :integer 
  #     configure :r1, :integer 
  #     configure :r2, :integer 
  #     configure :inside, :boolean 
  #     configure :outside, :boolean 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Ball  ###

  # config.model 'Ball' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your ball.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :radius, :integer 
  #     configure :texture_url, :text 
  #     configure :weight, :integer 
  #     configure :bounce, :float 
  #     configure :friction, :float 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  ChatServer  ###

  # config.model 'ChatServer' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your chat_server.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :address, :text 
  #     configure :port, :integer 
  #     configure :exp_date, :datetime 
  #     configure :online, :integer 
  #     configure :load, :float 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Circle  ###

  # config.model 'Circle' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your circle.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :visible, :boolean 
  #     configure :state, :serialized 
  #     configure :texture_url, :text 
  #     configure :player_collision, :boolean 
  #     configure :shape_collision, :boolean 
  #     configure :_type, :text         # Hidden 
  #     configure :x, :integer 
  #     configure :y, :integer 
  #     configure :radius, :integer 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Club  ###

  # config.model 'Club' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your club.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :short_name, :string 
  #     configure :name, :string 
  #     configure :status_message, :text 
  #     configure :creator_id, :integer 
  #     configure :max_players, :integer 
  #     configure :rating, :integer 
  #     configure :level, :integer 
  #     configure :last_updated, :integer 
  #     configure :_logo_remote_file_name, :text         # Hidden 
  #     configure :_logo_remote_content_type, :text         # Hidden 
  #     configure :_logo_remote_file_size, :integer         # Hidden 
  #     configure :_logo_remote_updated_at, :datetime         # Hidden 
  #     configure :_logo_remote, :paperclip 
  #     configure :_logo_local_file_name, :text         # Hidden 
  #     configure :_logo_local_content_type, :text         # Hidden 
  #     configure :_logo_local_file_size, :integer         # Hidden 
  #     configure :_logo_local_updated_at, :datetime         # Hidden 
  #     configure :_logo_local, :paperclip 
  #     configure :created_at, :datetime 
  #     configure :ratings_update, :datetime 
  #     configure :coins, :integer 
  #     configure :stars, :integer 
  #     configure :_keywords, :serialized 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  ClubUser  ###

  # config.model 'ClubUser' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your club_user.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :uid, :integer 
  #     configure :cid, :integer 
  #     configure :place_in_club, :integer 
  #     configure :rating_arrow, :integer 
  #     configure :role, :integer 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  ClubUserRequest  ###

  # config.model 'ClubUserRequest' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your club_user_request.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :uid, :integer 
  #     configure :cid, :integer 
  #     configure :requested_at, :datetime 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Collection  ###

  # config.model 'Collection' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your collection.rb model definition

  #   # Found associations:

  #     configure :collection_item, :has_many_association         # Hidden 

  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :stars_prise, :integer 
  #     configure :title, :string 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Currency  ###

  # config.model 'Currency' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your currency.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :id, :integer 
  #     configure :gate_id, :integer 
  #     configure :currency, :integer 
  #     configure :name, :string 
  #     configure :exchange_rate, :decimal 
  #     configure :date, :datetime 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  EventServer  ###

  # config.model 'EventServer' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your event_server.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :address, :text 
  #     configure :port, :integer 
  #     configure :exp_date, :datetime 
  #     configure :online, :integer 
  #     configure :load, :float 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  GameEvent  ###

  # config.model 'GameEvent' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your game_event.rb model definition

  #   # Found associations:

  #     configure :animation, :belongs_to_association 

  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :sound, :text 
  #     configure :animation_id, :bson_object_id         # Hidden 
  #     configure :duration, :integer 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  GamePlay  ###

  # config.model 'GamePlay' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your game_play.rb model definition

  #   # Found associations:

  #     configure :map, :belongs_to_association 

  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :name, :string 
  #     configure :map_id, :bson_object_id         # Hidden 
  #     configure :max_players, :integer 
  #     configure :time_size, :integer 
  #     configure :time_qty, :integer 
  #     configure :events, :serialized 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  GameResult  ###

  # config.model 'GameResult' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your game_result.rb model definition

  #   # Found associations:

  #     configure :team_game_results, :has_many_association 

  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :game_play, :integer 
  #     configure :timestamp, :integer 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  GameServer  ###

  # config.model 'GameServer' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your game_server.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :address, :text 
  #     configure :port, :integer 
  #     configure :exp_date, :datetime 
  #     configure :online, :integer 
  #     configure :load, :float 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Gate  ###

  # config.model 'Gate' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your gate.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :x1, :integer 
  #     configure :x2, :integer 
  #     configure :y1, :integer 
  #     configure :y2, :integer 
  #     configure :r1, :integer 
  #     configure :r2, :integer 
  #     configure :team, :integer 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  InGamePosition  ###

  # config.model 'InGamePosition' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your in_game_position.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :x, :integer 
  #     configure :y, :integer 
  #     configure :team, :integer 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Invite  ###

  # config.model 'Invite' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your invite.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :source, :integer 
  #     configure :destination, :integer 
  #     configure :text_hash, :text 
  #     configure :date, :datetime 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Item  ###

  # config.model 'Item' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your item.rb model definition

  #   # Found associations:

  #     configure :item_contents, :has_many_association 

  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :title, :string 
  #     configure :description, :text 
  #     configure :texture, :text 
  #     configure :stars, :integer 
  #     configure :coins, :integer 
  #     configure :level_min, :integer 
  #     configure :level_max, :integer 
  #     configure :visible, :boolean 
  #     configure :light_new, :boolean 
  #     configure :category, :integer 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  ItemContent  ###

  # config.model 'ItemContent' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your item_content.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :content, :integer 
  #     configure :count, :integer 
  #     configure :is_charge, :boolean 
  #     configure :chargable, :boolean 
  #     configure :type, :text 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Line  ###

  # config.model 'Line' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your line.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :visible, :boolean 
  #     configure :state, :serialized 
  #     configure :texture_url, :text 
  #     configure :player_collision, :boolean 
  #     configure :shape_collision, :boolean 
  #     configure :_type, :text         # Hidden 
  #     configure :x1, :integer 
  #     configure :x2, :integer 
  #     configure :y1, :integer 
  #     configure :y2, :integer 
  #     configure :r1, :integer 
  #     configure :r2, :integer 
  #     configure :left, :boolean 
  #     configure :right, :boolean 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Map  ###

  # config.model 'Map' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your map.rb model definition

  #   # Found associations:

  #     configure :sprites, :has_many_association 
  #     configure :map_balls, :has_many_association 
  #     configure :gates, :has_many_association 
  #     configure :circles, :has_many_association 
  #     configure :lines, :has_many_association 
  #     configure :arcs, :has_many_association 
  #     configure :start_positions, :has_many_association 
  #     configure :in_game_positions, :has_many_association 
  #     configure :game_play, :has_one_association 

  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :width, :integer 
  #     configure :height, :integer 
  #     configure :type, :integer 
  #     configure :texture_url, :text 
  #     configure :markup_url, :text 
  #     configure :bg_sound_url, :text 
  #     configure :team_count, :integer 
  #     configure :team_colors, :serialized 
  #     configure :friction, :float 
  #     configure :banner_top, :text 
  #     configure :banner_bottom, :text 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  MapBall  ###

  # config.model 'MapBall' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your map_ball.rb model definition

  #   # Found associations:

  #     configure :ball, :belongs_to_association 

  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :x, :integer 
  #     configure :y, :integer 
  #     configure :ball_id, :bson_object_id         # Hidden 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Message  ###

  # config.model 'Message' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your message.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :user_id, :integer 
  #     configure :message, :text 
  #     configure :type, :text 
  #     configure :date, :datetime 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  News  ###

  # config.model 'News' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your news.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :show, :boolean 
  #     configure :url, :text 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  OauthProvider  ###

  # config.model 'OauthProvider' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your oauth_provider.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :provider, :text 
  #     configure :uid, :text 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  RailsAdminUser  ###

  # config.model 'RailsAdminUser' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your rails_admin_user.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :email, :text 
  #     configure :password, :password         # Hidden 
  #     configure :password_confirmation, :password         # Hidden 
  #     configure :reset_password_token, :text         # Hidden 
  #     configure :reset_password_sent_at, :datetime 
  #     configure :remember_created_at, :datetime 
  #     configure :sign_in_count, :integer 
  #     configure :current_sign_in_at, :datetime 
  #     configure :last_sign_in_at, :datetime 
  #     configure :current_sign_in_ip, :text 
  #     configure :last_sign_in_ip, :text 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Room  ###

  # config.model 'Room' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your room.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :name, :string 
  #     configure :type, :integer 
  #     configure :players_cnt, :integer 
  #     configure :max_players, :integer 
  #     configure :state, :integer 
  #     configure :time_left, :integer 
  #     configure :game_play, :integer 
  #     configure :server_port, :integer 
  #     configure :server_host, :text 
  #     configure :level_from, :integer 
  #     configure :level_to, :integer 
  #     configure :password, :password         # Hidden 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Shape  ###

  # config.model 'Shape' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your shape.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :visible, :boolean 
  #     configure :state, :serialized 
  #     configure :texture_url, :text 
  #     configure :player_collision, :boolean 
  #     configure :shape_collision, :boolean 
  #     configure :_type, :text         # Hidden 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Sprite  ###

  # config.model 'Sprite' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your sprite.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :x, :integer 
  #     configure :y, :integer 
  #     configure :url, :text 
  #     configure :z_index, :integer 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  StartPosition  ###

  # config.model 'StartPosition' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your start_position.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :x, :integer 
  #     configure :y, :integer 
  #     configure :team, :integer 
  #     configure :special, :boolean 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  TeamGameResult  ###

  # config.model 'TeamGameResult' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your team_game_result.rb model definition

  #   # Found associations:

  #     configure :user_game_results, :has_many_association 

  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :score, :integer 
  #     configure :leavers, :boolean 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  User  ###

  # config.model 'User' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your user.rb model definition

  #   # Found associations:

  #     configure :room, :has_one_association 
  #     configure :user_achievement, :has_many_association 
  #     configure :user_collection, :has_many_association 
  #     configure :user_control, :has_one_association 
  #     configure :oauth_providers, :has_many_association 

  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :email, :text 
  #     configure :password, :password         # Hidden 
  #     configure :password_confirmation, :password         # Hidden 
  #     configure :admin, :boolean 
  #     configure :add_imagine, :integer 
  #     configure :remember_created_at, :datetime 
  #     configure :sign_in_count, :integer 
  #     configure :current_sign_in_at, :datetime 
  #     configure :last_sign_in_at, :datetime 
  #     configure :current_sign_in_ip, :text 
  #     configure :last_sign_in_ip, :text 
  #     configure :token, :integer 
  #     configure :exp_date, :integer 
  #     configure :in_game, :boolean 
  #     configure :room_type, :integer 
  #     configure :first_time, :boolean 
  #     configure :referrer, :text 
  #     configure :last_accessed, :datetime 
  #     configure :last_daily_bonus, :datetime 
  #     configure :days_in_row, :integer 
  #     configure :experience, :integer 
  #     configure :last_experience, :integer 
  #     configure :energy, :integer 
  #     configure :energy_max, :float 
  #     configure :energy_restore_factor, :float 
  #     configure :last_energy_update, :datetime 
  #     configure :group_id, :integer 
  #     configure :room_id, :text 
  #     configure :server, :text 
  #     configure :leg_length, :integer 
  #     configure :kick_power, :integer 
  #     configure :move_force, :integer 
  #     configure :super_kick_power, :integer 
  #     configure :points, :integer 
  #     configure :last_match_id, :text 
  #     configure :played_fast_matches, :integer 
  #     configure :ended_fast_matches, :integer 
  #     configure :created_rooms, :integer 
  #     configure :played_trainings, :integer 
  #     configure :played_in_group, :integer 
  #     configure :distance_walked, :float 
  #     configure :nitro_used, :float 
  #     configure :ball_kicks, :integer 
  #     configure :player_kicks, :integer 
  #     configure :goals, :integer 
  #     configure :goal_passes, :integer 
  #     configure :gate_saves, :integer 
  #     configure :rod_hits, :integer 
  #     configure :wins, :integer 
  #     configure :draws, :integer 
  #     configure :fails, :integer 
  #     configure :rating, :integer 
  #     configure :daily_rating, :integer 
  #     configure :monthly_rating, :integer 
  #     configure :daily_rating_day, :integer 
  #     configure :monthly_rating_month, :integer 
  #     configure :best_player, :integer 
  #     configure :friends_count, :integer 
  #     configure :skill_usage, :serialized 
  #     configure :dynamic_stats, :serialized 
  #     configure :hair, :integer 
  #     configure :eye, :integer 
  #     configure :mouth, :integer 
  #     configure :skin, :integer 
  #     configure :avail_hair, :serialized 
  #     configure :avail_eye, :serialized 
  #     configure :avail_mouth, :serialized 
  #     configure :filters_enabled, :boolean 
  #     configure :sound_on, :boolean 
  #     configure :music_on, :boolean 
  #     configure :fullscreen_on, :boolean 
  #     configure :active, :boolean 
  #     configure :collections_done, :integer 
  #     configure :stage, :integer 
  #     configure :fresh_man_tour_finished, :boolean 
  #     configure :last_read_mail, :integer 
  #     configure :last_shown_news, :integer 
  #     configure :last_game_result_id, :text 
  #     configure :coins, :integer 
  #     configure :stars, :integer 
  #     configure :name, :string 
  #     configure :user_agent, :text 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  UserAchievement  ###

  # config.model 'UserAchievement' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your user_achievement.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :achievement, :integer 
  #     configure :status, :integer 
  #     configure :stage, :integer 
  #     configure :achieved, :boolean 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  UserCollection  ###

  # config.model 'UserCollection' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your user_collection.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :collection_id, :integer 
  #     configure :item_id, :integer 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  UserControl  ###

  # config.model 'UserControl' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your user_control.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :up, :serialized 
  #     configure :down, :serialized 
  #     configure :left, :serialized 
  #     configure :right, :serialized 
  #     configure :kick, :serialized 
  #     configure :skill1, :serialized 
  #     configure :skill2, :serialized 
  #     configure :skill3, :serialized 
  #     configure :skill4, :serialized 
  #     configure :nitro, :serialized 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  UserDefault  ###

  # config.model 'UserDefault' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your user_default.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :player_bounce, :float 
  #     configure :leg_length_min, :integer 
  #     configure :leg_length_max, :integer 
  #     configure :kick_power_min, :integer 
  #     configure :kick_power_max, :integer 
  #     configure :move_force_min, :integer 
  #     configure :move_force_max, :integer 
  #     configure :super_kick_power_min, :float 
  #     configure :super_kick_power_max, :float 
  #     configure :super_kick_power_steps, :integer 
  #     configure :pumping_ticks, :integer 
  #     configure :radius, :integer 
  #     configure :acceleration, :float 
  #     configure :weight, :integer 
  #     configure :friction_on_move, :float 
  #     configure :friction_on_kick, :float 
  #     configure :nitro_force, :integer 
  #     configure :nitro_max, :float 
  #     configure :nitro_spend_speed, :float 
  #     configure :nitro_restore_speed, :float 
  #     configure :push_players_radius, :integer 
  #     configure :push_players_radius_max, :integer 
  #     configure :push_players_speed, :integer 
  #     configure :pull_balls_radius, :integer 
  #     configure :pull_balls_radius_max, :integer 
  #     configure :pull_balls_speed, :integer 
  #     configure :rush_self_speed, :integer 
  #     configure :teleport_self_radius, :integer 
  #     configure :slowdown_players_radius, :integer 
  #     configure :slowdown_players_speed, :float 
  #     configure :levels, :serialized 
  #     configure :exp_for_win, :integer 
  #     configure :exp_for_draw, :integer 
  #     configure :exp_for_fail, :integer 
  #     configure :coins_for_win, :integer 
  #     configure :coins_for_draw, :integer 
  #     configure :coins_for_fail, :integer 
  #     configure :rating_for_win, :integer 
  #     configure :rating_for_draw, :integer 
  #     configure :rating_for_fail, :integer 
  #     configure :goals_delta, :integer 
  #     configure :exp_for_goals_delta, :integer 
  #     configure :exp_for_max_goals, :integer 
  #     configure :exp_for_max_gate_saves, :integer 
  #     configure :exp_for_max_goal_passes, :integer 
  #     configure :energy_for_play, :integer 
  #     configure :enable_level_ranging, :boolean 
  #     configure :level_ranges, :serialized 
  #     configure :collection_item_probability, :integer 
  #     configure :max_club_requests, :integer 
  #     configure :stop_game, :boolean 
  #     configure :hair_only, :serialized 
  #     configure :hair_top, :serialized 
  #     configure :scarf, :serialized 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  UserGameResult  ###

  # config.model 'UserGameResult' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your user_game_result.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :group_id, :integer 
  #     configure :distance_walked, :float 
  #     configure :ball_kicks, :integer 
  #     configure :player_kicks, :integer 
  #     configure :nitro_used, :float 
  #     configure :goals, :integer 
  #     configure :goal_passes, :integer 
  #     configure :rod_hits, :integer 
  #     configure :best, :boolean 
  #     configure :experience, :integer 
  #     configure :rating, :integer 
  #     configure :stars, :integer 
  #     configure :coins, :integer 
  #     configure :exp_for_max_goal_passes, :integer 
  #     configure :exp_for_max_gate_saves, :integer 
  #     configure :exp_for_max_goals, :integer 
  #     configure :team_mates, :integer 
  #     configure :leaver, :boolean 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  UserLog  ###

  # config.model 'UserLog' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your user_log.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :user_id, :integer 
  #     configure :log, :text 
  #     configure :date_created, :datetime 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  UserWeapon  ###

  # config.model 'UserWeapon' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your user_weapon.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :title, :string 
  #     configure :description, :text 
  #     configure :texture, :text 
  #     configure :mul_params, :serialized 
  #     configure :sum_params, :serialized 
  #     configure :pump_params, :serialized 
  #     configure :type, :integer 
  #     configure :instant_use, :boolean 
  #     configure :last_use_time, :integer 
  #     configure :recharging, :boolean 
  #     configure :wasting, :boolean 
  #     configure :charge, :integer 
  #     configure :action_interval, :integer 
  #     configure :action_time, :integer 
  #     configure :action, :integer 
  #     configure :light_vip, :boolean 
  #     configure :waste_per_match, :boolean 
  #     configure :_type, :text         # Hidden 
  #     configure :user_id, :integer 
  #     configure :active, :boolean 
  #     configure :activate_time, :integer 
  #     configure :update_time, :integer 
  #     configure :origin, :integer 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Visit  ###

  # config.model 'Visit' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your visit.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :bson_object_id 
  #     configure :user_id, :integer 
  #     configure :time_in, :integer 
  #     configure :time_out, :integer 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end


  ###  Weapon  ###

  # config.model 'Weapon' do

  #   # You can copy this to a 'rails_admin do ... end' block inside your weapon.rb model definition

  #   # Found associations:



  #   # Found columns:

  #     configure :_id, :integer 
  #     configure :title, :string 
  #     configure :description, :text 
  #     configure :texture, :text 
  #     configure :mul_params, :serialized 
  #     configure :sum_params, :serialized 
  #     configure :pump_params, :serialized 
  #     configure :type, :integer 
  #     configure :instant_use, :boolean 
  #     configure :last_use_time, :integer 
  #     configure :recharging, :boolean 
  #     configure :wasting, :boolean 
  #     configure :charge, :integer 
  #     configure :action_interval, :integer 
  #     configure :action_time, :integer 
  #     configure :action, :integer 
  #     configure :light_vip, :boolean 
  #     configure :waste_per_match, :boolean 
  #     configure :_type, :text         # Hidden 

  #   # Cross-section configuration:

  #     # object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #     # label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #     # label_plural 'My models'      # Same, plural
  #     # weight 0                      # Navigation priority. Bigger is higher.
  #     # parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #     # navigation_label              # Sets dropdown entry's name in navigation. Only for parents!

  #   # Section specific configuration:

  #     list do
  #       # filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #       # items_per_page 100    # Override default_items_per_page
  #       # sort_by :id           # Sort column (default is primary key)
  #       # sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     end
  #     show do; end
  #     edit do; end
  #     export do; end
  #     # also see the create, update, modal and nested sections, which override edit in specific cases (resp. when creating, updating, modifying from another model in a popup modal or modifying from another model nested form)
  #     # you can override a cross-section field configuration in any section with the same syntax `configure :field_name do ... end`
  #     # using `field` instead of `configure` will exclude all other fields and force the ordering
  # end

end
